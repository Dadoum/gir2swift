{"Structs.html#/s:12libgir2swift16GetterSetterPairV":{"name":"GetterSetterPair","abstract":"<p>a pair of getters and setters (both cannot be nil at the same time)</p>"},"Functions.html#/s:12libgir2swift7get_optySJ_SSSgtSgSSF":{"name":"get_opt(_:)","abstract":"<p>Wrapper for POSIX <code>getopt()</code> to return a Swift tuple."},"Functions.html#/s:12libgir2swift17getterSetterPairs3forSayAA06GetterC4PairVGSayAA3GIRC6MethodCG_tF":{"name":"getterSetterPairs(for:)","abstract":"<p>return setter/getter pairs from a list of methods</p>"},"Functions.html#/s:12libgir2swift11commentCode_11indentationSSAA3GIRC5ThingC_SStF":{"name":"commentCode(_:indentation:)","abstract":"<p>SwiftDoc representation of comments</p>"},"Functions.html#/s:12libgir2swift14deprecatedCode_11indentationSSSgAA3GIRC5ThingC_SStF":{"name":"deprecatedCode(_:indentation:)","abstract":"<p>Swift representation of deprecation</p>"},"Functions.html#/s:12libgir2swift9swiftCode__11indentationSSAA3GIRC5ThingC_S2StF":{"name":"swiftCode(_:_:indentation:)","abstract":"<p>Swift code representation with code following the comments</p>"},"Functions.html#/s:12libgir2swift9swiftCode5aliasSSAA3GIRC5AliasC_tF":{"name":"swiftCode(alias:)","abstract":"<p>Swift code representation of a type alias</p>"},"Functions.html#/s:12libgir2swift22swiftCallbackAliasCode8callbackSSAA3GIRC0C0C_tF":{"name":"swiftCallbackAliasCode(callback:)","abstract":"<p>Swift code representation of a callback as a type alias</p>"},"Functions.html#/s:12libgir2swift9swiftCode8constantSSAA3GIRC8ConstantC_tF":{"name":"swiftCode(constant:)","abstract":"<p>Swift code representation of a constant</p>"},"Functions.html#/s:12libgir2swift9typeAliasySSAA3GIRC11EnumerationCF":{"name":"typeAlias(_:)","abstract":"<p>Swift code type alias representation of an enum</p>"},"Functions.html#/s:12libgir2swift9swiftCodeySSAA3GIRC11EnumerationCF":{"name":"swiftCode(_:)","abstract":"<p>Swift code representation of an enum</p>"},"Functions.html#/s:12libgir2swift9valueCodeySSAA3GIRC8ConstantCcSSF":{"name":"valueCode(_:)","abstract":"<p>Swift code representation of an enum value</p>"},"Functions.html#/s:12libgir2swift18recordProtocolCode_6parent11indentation3ptrSSAA3GIRC6RecordC_S3StF":{"name":"recordProtocolCode(_:parent:indentation:ptr:)","abstract":"<p>Swift protocol representation of a record/class as a wrapper of a pointer</p>"},"Functions.html#/s:12libgir2swift27recordProtocolExtensionCode__11indentation3ptrSSSayAA3GIRC8FunctionCG_AF6RecordCS2StF":{"name":"recordProtocolExtensionCode(_:_:indentation:ptr:)","abstract":"<p>Default implementation for record methods as protocol extension</p>"},"Functions.html#/s:12libgir2swift12functionCode_11indentation18initialIndentationSSAA3GIRC8FunctionC_S2StF":{"name":"functionCode(_:indentation:initialIndentation:)","abstract":"<p>Default implementation for functions</p>"},"Functions.html#/s:12libgir2swift10methodCode_18initialIndentation6record17publicDesignation11convertName3ptrSSAA3GIRC6MethodCcSS_SSSgAI6RecordCSgS3ScSStF":{"name":"methodCode(_:initialIndentation:record:publicDesignation:convertName:ptr:)","abstract":"<p>Swift code for methods (with a given indentation)</p>"},"Functions.html#/s:12libgir2swift20computedPropertyCode_6record17publicDesignation3ptrSSAA16GetterSetterPairVcSS_AA3GIRC6RecordCS2StF":{"name":"computedPropertyCode(_:record:publicDesignation:ptr:)","abstract":"<p>Swift code for computed properties</p>"},"Functions.html#/s:12libgir2swift26convenienceConstructorCode_11indentation0B017publicDesignation7factory11convertNameSSAA3GIRC6MethodCcAI6RecordCcSS_S3SSbS2SctF":{"name":"convenienceConstructorCode(_:indentation:convenience:publicDesignation:factory:convertName:)","abstract":"<p>Swift code for convenience constructors</p>"},"Functions.html#/s:12libgir2swift14returnTypeCodeySSSgAA3GIRC6MethodCcSS8typeName_AE6RecordC6recordSb13isConstructortSgF":{"name":"returnTypeCode(_:)","abstract":"<p>Return the return type of a method,</p>"},"Functions.html#/s:12libgir2swift21returnDeclarationCodeySSAA3GIRC6MethodCcSS8typeName_AD6RecordC6recordSb13isConstructortSgF":{"name":"returnDeclarationCode(_:)","abstract":"<p>Return code declaration for functions/methods/convenience constructors</p>"},"Functions.html#/s:12libgir2swift10returnCode__3ptrSSAA3GIRC6MethodCcSS_SS8typeName_AE6RecordC6recordSb13isConstructorSb0K11ConveniencetSgSStF":{"name":"returnCode(_:_:ptr:)","abstract":"<p>Return code for functions/methods/convenience constructors</p>"},"Functions.html#/s:12libgir2swift8callCode__3ptrSSAA3GIRC6MethodCcSS_AE6RecordCSgSStF":{"name":"callCode(_:_:ptr:)","abstract":"<p>Swift code for calling the underlying function and assigning the raw return value</p>"},"Functions.html#/s:12libgir2swift10callSetter__3ptrSSAA3GIRC6MethodCcSS_AE6RecordCSgSStF":{"name":"callSetter(_:_:ptr:)","abstract":"<p>Swift code for calling the underlying setter function and assigning the raw return value</p>"},"Functions.html#/s:12libgir2swift16constructorParam_6prefixSSAA3GIRC6MethodC_SSSgtF":{"name":"constructorParam(_:prefix:)","abstract":"<p>Swift code for the parameters of a constructor</p>"},"Functions.html#/s:12libgir2swift17constructorPrefixySSSgAA3GIRC6MethodCF":{"name":"constructorPrefix(_:)","abstract":"<p>Swift code for constructor first argument prefix extracted from a method name</p>"},"Functions.html#/s:12libgir2swift7codeFor8argumentSSAA3GIRC8ArgumentC_tF":{"name":"codeFor(argument:)","abstract":"<p>Swift code for auto-prefixed arguments</p>"},"Functions.html#/s:12libgir2swift7codeFor8argument6prefixSSAA3GIRC8ArgumentC_SStF":{"name":"codeFor(argument:prefix:)","abstract":"<p>Swift code for methods</p>"},"Functions.html#/s:12libgir2swift7toSwift_3ptrSSAA3GIRC8ArgumentC_SStF":{"name":"toSwift(_:ptr:)","abstract":"<p>Swift code for passing an argument to a free standing function</p>"},"Functions.html#/s:12libgir2swift31convertSetterArgumentToSwiftFor_3ptrSSAA3GIRC0D0CcAE6RecordCSg_SStF":{"name":"convertSetterArgumentToSwiftFor(_:ptr:)","abstract":"<p>Swift code for passing a setter to a method of a record / class</p>"},"Functions.html#/s:12libgir2swift14signalNameCode11indentation07convertC0SSAA3GIRC5CTypeCcSS_S2SctF":{"name":"signalNameCode(indentation:convertName:)","abstract":"<p>Swift code for signal names without prefixes</p>"},"Functions.html#/s:12libgir2swift14signalNameCode11indentation8prefixes07convertC0SSAA3GIRC5CTypeCcSS_SS_SStS2SctF":{"name":"signalNameCode(indentation:prefixes:convertName:)","abstract":"<p>Swift code for signal names with prefixes</p>"},"Functions.html#/s:12libgir2swift16recordStructCode_11indentation3ptrSSAA3GIRC6RecordC_S2StF":{"name":"recordStructCode(_:indentation:ptr:)","abstract":"<p>Swift struct representation of a record/class as a wrapper of a pointer</p>"},"Functions.html#/s:12libgir2swift15recordClassCode_6parent11indentation3ptrSSAA3GIRC6RecordC_S3StF":{"name":"recordClassCode(_:parent:indentation:ptr:)","abstract":"<p>Swift struct representation of a record/class as a wrapper of a pointer</p>"},"Functions.html#/s:12libgir2swift9swiftCodeySSAA3GIRC6RecordCcSScSayAD8FunctionCGF":{"name":"swiftCode(_:)","abstract":"<p>Swift code representation of a record</p>"},"Functions.html#/s:12libgir2swift9swiftCodeySSAA3GIRC8FunctionCF":{"name":"swiftCode(_:)","abstract":"<p>Swift code representation of a free standing function</p>"},"Functions.html#/s:12libgir2swift2eeoiySbAA3GIRC5ThingC_AFtF":{"name":"==(_:_:)","abstract":"<p>Comparator to check whether two <code>Thing</code>s are equal</p>"},"Functions.html#/s:12libgir2swift1loiySbAA3GIRC5ThingC_AFtF":{"name":"<(_:_:)","abstract":"<p>Comparator to check the ordering of two <code>Thing</code>s</p>"},"Functions.html#/s:12libgir2swift15gtkDoc2SwiftDoc_10linePrefixS2S_SStF":{"name":"gtkDoc2SwiftDoc(_:linePrefix:)","abstract":"<p>Convert the given String to SwiftDoc</p>"},"Functions.html#/s:12libgir2swift9with_mmap_10protection5flags7processySS_s5Int32VAGySv_SitXEtF":{"name":"with_mmap(_:protection:flags:process:)","abstract":"<p>memory map the given file with the given protection and flags,"},"Functions.html#/s:12libgir2swift9with_mmap_10protection5flags7processySS_s5Int32VAGySRyxGXEtlF":{"name":"with_mmap(_:protection:flags:process:)","abstract":"<p>memory map the given file to an unsafe buffer pointer"},"Extensions/XMLElement.html#/s:11SwiftLibXML10XMLElementV12libgir2swiftE22sortedSubAttributesFor4attr7splitBy07orderedL0SaySSGSS_SJSbSS_SStXEtF":{"name":"sortedSubAttributesFor(attr:splitBy:orderedBy:)","abstract":"<p>return an attribute as a list of sub-attributeds split by a given character","parent_name":"XMLElement"},"Extensions/XMLElement.html#/s:11SwiftLibXML10XMLElementV12libgir2swiftE4docsSSyF":{"name":"docs()","abstract":"<p>return the documentation for a given node</p>","parent_name":"XMLElement"},"Extensions/String.html#/baseName":{"name":"baseName","parent_name":"String"},"Extensions/String.html#/hasPrefix(_:)":{"name":"hasPrefix(_:)","abstract":"<p>return whether the receiver has the given prefix</p>","parent_name":"String"},"Extensions/String.html#/hasSuffix(_:)":{"name":"hasSuffix(_:)","abstract":"<p>return whether the receiver has the given suffix</p>","parent_name":"String"},"Extensions/String/UTF8View.html#/s:SS8UTF8ViewV12libgir2swiftE2eeoiySbAB_ABtFZ":{"name":"==(_:_:)","abstract":"<p>compare two UTF8Views for equality</p>","parent_name":"UTF8View"},"Extensions/String.html#/s:SS12libgir2swiftE8contentsSSSgvp":{"name":"contents","abstract":"<p>Returns the content of the file designated by the receiver</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE14contentsOfFile5quietSSSgSS_Sbtcfc":{"name":"init(contentsOfFile:quiet:)","abstract":"<p>Read a string from a file</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE7writeTo4file10atomicallyySS_SbtKF":{"name":"writeTo(file:atomically:)","abstract":"<p>Write a string to a file as UTF-8</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE5split9separatorSaySSGSJ_tF":{"name":"split(separator:)","abstract":"<p>Split a string into substrings separated by the given character</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE5linesSaySSGvp":{"name":"lines","abstract":"<p>return the lines of the given string</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE10unprefixedSSvp":{"name":"unprefixed","abstract":"<p>return the unprefixed version of the string","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE8prefixed4withS2S_tF":{"name":"prefixed(with:)","abstract":"<p>return a prefixed version of the string</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE16stringByRemoving6suffixSSSgSS_tF":{"name":"stringByRemoving(suffix:)","abstract":"<p>return the string resulting from removing the given suffix</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE48stringByRemovingAnEquivalentNumberOfCharactersAs6suffixS2S_tF":{"name":"stringByRemovingAnEquivalentNumberOfCharactersAs(suffix:)","abstract":"<p>return the string resulting from removing the same number of","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE10afterFirst9separatorSSSgSJ_tF":{"name":"afterFirst(separator:)","abstract":"<p>return the substring after the first occurrence of the given character</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE11capitalisedSSvp":{"name":"capitalised","abstract":"<p>return the capidalised name of the receiver</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE13deCapitalisedSSvp":{"name":"deCapitalised","abstract":"<p>return the de-capidalised (lower-case first character) name of the receiver</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE8cameliseySSSbs5UInt8VXEF":{"name":"camelise(_:)","abstract":"<p>convert a string with separators to camel case</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE9camelCaseSSvp":{"name":"camelCase","abstract":"<p>convert the receiver to camel case</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE11camelSignalSSvp":{"name":"camelSignal","abstract":"<p>convert a signal name with &lsquo;-&rsquo; to camel case</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE20camelSignalComponentSSvp":{"name":"camelSignalComponent","abstract":"<p>convert a signal name component with &lsquo;-&rsquo; to camel case</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE8baseNameSSvp":{"name":"baseName","abstract":"<p>Undocumented</p>","parent_name":"String"},"Extensions/String/UTF8View.html":{"name":"UTF8View","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE6removeyS2SF":{"name":"remove(_:)","abstract":"<p>recursively remove all occurrences of the given substring","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE8containsySbSSF":{"name":"contains(_:)","abstract":"<p>return whether the receiver contains the given substring</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE18trimmingCharacters2inSSShys5UInt8VG_tF":{"name":"trimmingCharacters(in:)","abstract":"<p>trim the characters in the given set of UTF8 values at either end of the string</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE7trimmedSSvp":{"name":"trimmed","abstract":"<p>return the string trimmed of white space at either end</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE11typeEscapedSSvp":{"name":"typeEscaped","abstract":"<p>return a name with reserved Ref or Protocol suffixes escaped</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE15swiftIdentifierSSvp":{"name":"swiftIdentifier","abstract":"<p>Return a string that starts with an alpha or underscore character</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE9swiftTypeSSvp":{"name":"swiftType","abstract":"<p>return a valid Swift type for an underlying C type</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE9swiftNameSSvp":{"name":"swiftName","abstract":"<p>return a valid Swift name by appending &lsquo;_&rsquo; to a reserved name</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE5swiftSSvp":{"name":"swift","abstract":"<p>return a swift representation of an identifier string (escaped if necessary)</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE8isCConstSbvp":{"name":"isCConst","abstract":"<p>indicate whether the type represented by the receiver is a constant</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE17isCastablePointerSbvp":{"name":"isCastablePointer","abstract":"<p>indicate whether the given string is a known g pointer type</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE14isSwiftPointerSbvp":{"name":"isSwiftPointer","abstract":"<p>indicate whether the given string is a knowns Swift pointer type</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE24typeWithoutTrailingConstSSvp":{"name":"typeWithoutTrailingConst","abstract":"<p>return the C type without a trailing <q>const</q></p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE27typeWithoutTrailingVolatileSSvp":{"name":"typeWithoutTrailingVolatile","abstract":"<p>return the C type without a trailing <q>const</q></p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE23typeWithoutLeadingConstSSvp":{"name":"typeWithoutLeadingConst","abstract":"<p>return the C type without a leading <q>const</q></p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE26typeWithoutLeadingVolatileSSvp":{"name":"typeWithoutLeadingVolatile","abstract":"<p>return the C type without a leading <q>volatile</q></p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE34typeWithoutTrailingConstOrVolatileSSvp":{"name":"typeWithoutTrailingConstOrVolatile","abstract":"<p>return the C type without a trailing <q>const</q> or <q>volatile</q></p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE33typeWithoutLeadingOrTrailingConstSSvp":{"name":"typeWithoutLeadingOrTrailingConst","abstract":"<p>return the C type without a leading or trailing <q>const</q></p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE36typeWithoutLeadingOrTrailingVolatileSSvp":{"name":"typeWithoutLeadingOrTrailingVolatile","abstract":"<p>return the C type without a leading or trailing <q>volatile</q></p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE033typeWithoutLeadingOrTrailingConstE8VolatileSSvp":{"name":"typeWithoutLeadingOrTrailingConstOrVolatile","abstract":"<p>return the C type without a leading or trailing <q>const</q> or <q>volatile</q></p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE16typeWithoutConstSSvp":{"name":"typeWithoutConst","abstract":"<p>return the C type without <q>const</q></p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE19typeWithoutVolatileSSvp":{"name":"typeWithoutVolatile","abstract":"<p>return the C type without <q>volatile</q></p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE7withoutyS2SF":{"name":"without(_:)","abstract":"<p>return C type without the given word</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE7without6prefixS2S_tF":{"name":"without(prefix:)","abstract":"<p>return C type without the given prefix</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE7without8prefixesSSSaySSG_tF":{"name":"without(prefixes:)","abstract":"<p>return C type without any of the given prefixes</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE7without6suffixS2S_tF":{"name":"without(suffix:)","abstract":"<p>return C type without the given suffix</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE7without8suffixesSSSaySSG_tF":{"name":"without(suffixes:)","abstract":"<p>return C type without any of the given suffixes</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE17isTrimmedCPointerSbvp":{"name":"isTrimmedCPointer","abstract":"<p>return whether the untrimmed string is a C pointer</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE17isTrimmedGPointerSbvp":{"name":"isTrimmedGPointer","abstract":"<p>return whether the untrimmed string is a gpointer or gconstpointer</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE16isTrimmedPointerSbvp":{"name":"isTrimmedPointer","abstract":"<p>return whether the untrimmed string is a pointer</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE10isCPointerSbvp":{"name":"isCPointer","abstract":"<p>return whether the underlying C type is a pointer</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE10isGPointerSbvp":{"name":"isGPointer","abstract":"<p>return whether the underlying C type is a gpointer</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE9isPointerSbvp":{"name":"isPointer","abstract":"<p>return whether the underlying C type is a pointer of any kind</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE25underlyingTypeForCPointerSSSgvp":{"name":"underlyingTypeForCPointer","abstract":"<p>return the underlying C type for a pointer, nil if not a pointer</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE23unwrappedCTypeWithCountySS5gType_SS5swiftSi07pointerE0Si05constE0SS05innerF0tSi_SitF":{"name":"unwrappedCTypeWithCount(_:_:)","abstract":"<p>return the C type unwrapped and converted to Swift</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE10innerCTypeSSvp":{"name":"innerCType","abstract":"<p>return the inner type of a C type (without pointers and const)</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE10innerGTypeSSvp":{"name":"innerGType","abstract":"<p>return the swift representation of the inner type of a C type (without pointers and const)</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE14innerSwiftTypeSSvp":{"name":"innerSwiftType","abstract":"<p>return the common swift type used for the inner type of a C type (without pointers and const)</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE14unwrappedCTypeSSvp":{"name":"unwrappedCType","abstract":"<p>return the C type unwrapped, without const, and converted to Swift</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE26swiftRepresentationOfCTypeSSvp":{"name":"swiftRepresentationOfCType","abstract":"<p>return the Swift type common for a given C type</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE13cast_as_swiftyS2SF":{"name":"cast_as_swift(_:)","abstract":"<p>return the string (value) cast to Swift</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE9cast_as_cyS2SF":{"name":"cast_as_c(_:)","abstract":"<p>return the string (value) cast to Swift</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE11isKnownTypeSbvp":{"name":"isKnownType","abstract":"<p>indicates whether the receiver is a known type</p>","parent_name":"String"},"Extensions/String.html#/s:SS12libgir2swiftE16withoutNameSpaceSSvp":{"name":"withoutNameSpace","abstract":"<p>Remove the name space and return the base name of the receiver","parent_name":"String"},"Extensions/Sequence.html#/s:ST12libgir2swiftE14findFirstWherey7ElementQzSgSbADXEF":{"name":"findFirstWhere(_:)","abstract":"<p>Returns the first element where the comparison function returns <code>true</code>","parent_name":"Sequence"},"Extensions/Sequence.html#/s:ST12libgir2swiftSH7ElementRpzrlE5asSetShyACGvp":{"name":"asSet","abstract":"<p>return a set containing the elements from the given sequence</p>","parent_name":"Sequence"},"Extensions/BidirectionalCollection.html#/s:SK12libgir2swiftE9trimWhiley11SubSequenceQzSb7ElementQzXEF":{"name":"trimWhile(_:)","abstract":"<p>Trims the suffix where the <code>found</code> function/closure keeps returning true</p>","parent_name":"BidirectionalCollection"},"Extensions/Collection.html#/s:Sl12libgir2swiftE8takeFrom10indexWhere11SubSequenceQzSb7ElementQzXE_tF":{"name":"takeFrom(indexWhere:)","abstract":"<p>Returns the suffix from where the <code>found</code> function/closure first returns true</p>","parent_name":"Collection"},"Extensions/Collection.html":{"name":"Collection"},"Extensions/BidirectionalCollection.html":{"name":"BidirectionalCollection"},"Extensions/Sequence.html":{"name":"Sequence"},"Extensions/String.html":{"name":"String","abstract":"<p>return the base name of a string</p>"},"Extensions/XMLElement.html":{"name":"XMLElement"},"Classes/GIR/Argument.html#/s:12libgir2swift3GIRC8ArgumentC4kindSSvp":{"name":"kind","parent_name":"Argument"},"Classes/GIR/Argument.html#/s:12libgir2swift3GIRC8ArgumentC8instanceSbvp":{"name":"instance","abstract":"<p>Undocumented</p>","parent_name":"Argument"},"Classes/GIR/Argument.html#/s:12libgir2swift3GIRC8ArgumentC8_varargsSbvp":{"name":"_varargs","abstract":"<p>&lt; is this an instance parameter?</p>","parent_name":"Argument"},"Classes/GIR/Argument.html#/s:12libgir2swift3GIRC8ArgumentC7varargsSbvp":{"name":"varargs","abstract":"<p>&lt; is this a varargs (&hellip;) parameter?","parent_name":"Argument"},"Classes/GIR/Argument.html#/s:12libgir2swift3GIRC8ArgumentC4name4type5ctype8instance7comment14introspectable10deprecated7varargsAESS_S2SSbSSSbSSSgSbtcfc":{"name":"init(name:type:ctype:instance:comment:introspectable:deprecated:varargs:)","abstract":"<p>default constructor</p>","parent_name":"Argument"},"Classes/GIR/Argument.html#/s:12libgir2swift3GIRC8ArgumentC4node7atIndexAE11SwiftLibXML10XMLElementV_Sitcfc":{"name":"init(node:atIndex:)","abstract":"<p>XML constructor</p>","parent_name":"Argument"},"Classes/GIR/Argument.html#/s:12libgir2swift3GIRC8ArgumentC4node7atIndex7varargsAE11SwiftLibXML10XMLElementV_SiSbtcfc":{"name":"init(node:atIndex:varargs:)","abstract":"<p>XML constructor for functions/methods/callbacks</p>","parent_name":"Argument"},"Classes/GIR/Argument.html#/s:12libgir2swift3GIRC8ArgumentC9knownTypeAC8DatatypeCSgvp":{"name":"knownType","abstract":"<p>/ return the known type of the argument (nil if not known)</p>","parent_name":"Argument"},"Classes/GIR/Argument.html#/s:12libgir2swift3GIRC8ArgumentC11knownRecordAC0E0CSgvp":{"name":"knownRecord","abstract":"<p>/ return the known class/record of the argument (nil if not known)</p>","parent_name":"Argument"},"Classes/GIR/Argument.html#/s:12libgir2swift3GIRC8ArgumentC11isKnownTypeSbvp":{"name":"isKnownType","abstract":"<p>indicates whether the receiver is a known type</p>","parent_name":"Argument"},"Classes/GIR/Argument.html#/s:12libgir2swift3GIRC8ArgumentC13isKnownRecordSbvp":{"name":"isKnownRecord","abstract":"<p>indicates whether the receiver is a known class or record</p>","parent_name":"Argument"},"Classes/GIR/Argument.html#/s:12libgir2swift3GIRC8ArgumentC18isAnyKindOfPointerSbvp":{"name":"isAnyKindOfPointer","abstract":"<p>indicates whether the receiver is any known kind of pointer</p>","parent_name":"Argument"},"Classes/GIR/Argument.html#/s:12libgir2swift3GIRC8ArgumentC13isScalarArraySbvp":{"name":"isScalarArray","abstract":"<p>indicates whether the receiver is an array of scalar values</p>","parent_name":"Argument"},"Classes/GIR/Argument.html#/s:12libgir2swift3GIRC8ArgumentC15nonClashingNameSSvp":{"name":"nonClashingName","abstract":"<p>return a non-clashing argument name</p>","parent_name":"Argument"},"Classes/GIR/Argument.html#/s:12libgir2swift3GIRC8ArgumentC12argumentNameSSvp":{"name":"argumentName","abstract":"<p>return the non-prefixed argument name</p>","parent_name":"Argument"},"Classes/GIR/Argument.html#/s:12libgir2swift3GIRC8ArgumentC08prefixedC4NameSSvp":{"name":"prefixedArgumentName","abstract":"<p>return the, potentially prefixed argument name to use in a method declaration</p>","parent_name":"Argument"},"Classes/GIR/Argument.html#/s:12libgir2swift3GIRC8ArgumentC12argumentTypeSSvp":{"name":"argumentType","abstract":"<p>return the swift (known) type of the receiver</p>","parent_name":"Argument"},"Classes/GIR/Argument.html#/s:12libgir2swift3GIRC8ArgumentC12isInstanceOfySbAC6RecordCSgF":{"name":"isInstanceOf(_:)","abstract":"<p>return whether the receiver is an instance of the given record (class)</p>","parent_name":"Argument"},"Classes/GIR/Argument.html#/s:12libgir2swift3GIRC8ArgumentC21isInstanceOfHierarchyySbAC6RecordCF":{"name":"isInstanceOfHierarchy(_:)","abstract":"<p>return whether the receiver is an instance of the given record (class) or any of its ancestors</p>","parent_name":"Argument"},"Classes/GIR/Property.html#/s:12libgir2swift3GIRC8PropertyC4kindSSvp":{"name":"kind","parent_name":"Property"},"Classes/GIR/Signal.html#/s:12libgir2swift3GIRC6SignalC4kindSSvp":{"name":"kind","parent_name":"Signal"},"Classes/GIR/Callback.html#/s:12libgir2swift3GIRC8CallbackC4kindSSvp":{"name":"kind","parent_name":"Callback"},"Classes/GIR/Function.html#/s:12libgir2swift3GIRC8FunctionC4kindSSvp":{"name":"kind","parent_name":"Function"},"Classes/GIR/Method.html#/s:12libgir2swift3GIRC6MethodC4kindSSvp":{"name":"kind","abstract":"<p>String representation of member <code>Method</code>s</p>","parent_name":"Method"},"Classes/GIR/Method.html#/s:12libgir2swift3GIRC6MethodC5cnameSSvp":{"name":"cname","abstract":"<p>Original C function name</p>","parent_name":"Method"},"Classes/GIR/Method.html#/s:12libgir2swift3GIRC6MethodC7returnsAC8ArgumentCvp":{"name":"returns","abstract":"<p>Return type</p>","parent_name":"Method"},"Classes/GIR/Method.html#/s:12libgir2swift3GIRC6MethodC4argsSayAC8ArgumentCGvp":{"name":"args","abstract":"<p>All associated arguments (parameters) in order</p>","parent_name":"Method"},"Classes/GIR/Method.html#/s:12libgir2swift3GIRC6MethodC11throwsErrorSbvp":{"name":"throwsError","abstract":"<p><code>true</code> if this method throws an error</p>","parent_name":"Method"},"Classes/GIR/Method.html#/s:12libgir2swift3GIRC6MethodC4name5cname7returns4args7comment14introspectable10deprecated13throwsAnErrorAESS_SSAC8ArgumentCSayAOGSSSbSSSgSbtcfc":{"name":"init(name:cname:returns:args:comment:introspectable:deprecated:throwsAnError:)","abstract":"<p>Designated initialiser</p>","parent_name":"Method"},"Classes/GIR/Method.html#/s:12libgir2swift3GIRC6MethodC4node7atIndexAE11SwiftLibXML10XMLElementV_Sitcfc":{"name":"init(node:atIndex:)","abstract":"<p>Initialiser to construct a method type from XML</p>","parent_name":"Method"},"Classes/GIR/Method.html#/s:12libgir2swift3GIRC6MethodC7isUnrefSbvp":{"name":"isUnref","abstract":"<p>indicate whether this is an unref method</p>","parent_name":"Method"},"Classes/GIR/Method.html#/s:12libgir2swift3GIRC6MethodC5isRefSbvp":{"name":"isRef","abstract":"<p>indicate whether this is a ref method</p>","parent_name":"Method"},"Classes/GIR/Method.html#/s:12libgir2swift3GIRC6MethodC8isGetterSbvp":{"name":"isGetter","abstract":"<p>indicate whether this is a getter method</p>","parent_name":"Method"},"Classes/GIR/Method.html#/s:12libgir2swift3GIRC6MethodC8isSetterSbvp":{"name":"isSetter","abstract":"<p>indicate whether this is a setter method</p>","parent_name":"Method"},"Classes/GIR/Method.html#/s:12libgir2swift3GIRC6MethodC11isSetterFor6getterSbSS_tF":{"name":"isSetterFor(getter:)","abstract":"<p>indicate whether this is a setter method for the given getter</p>","parent_name":"Method"},"Classes/GIR/Method.html#/s:12libgir2swift3GIRC6MethodC11isGetterFor6setterSbSS_tF":{"name":"isGetterFor(setter:)","abstract":"<p>indicate whether this is a getter method for the given setter</p>","parent_name":"Method"},"Classes/GIR/Method.html#/s:12libgir2swift3GIRC6MethodC23isDesignatedConstructorSbvp":{"name":"isDesignatedConstructor","abstract":"<p>Undocumented</p>","parent_name":"Method"},"Classes/GIR/Method.html#/s:12libgir2swift3GIRC6MethodC13isBareFactorySbvp":{"name":"isBareFactory","abstract":"<p>is this a bare factory method that is not the default constructor</p>","parent_name":"Method"},"Classes/GIR/Method.html#/s:12libgir2swift3GIRC6MethodC15isConstructorOfySbAC6RecordCSgF":{"name":"isConstructorOf(_:)","abstract":"<p>return whether the method is a constructor of the given record</p>","parent_name":"Method"},"Classes/GIR/Method.html#/s:12libgir2swift3GIRC6MethodC11isFactoryOfySbAC6RecordCSgF":{"name":"isFactoryOf(_:)","abstract":"<p>return whether the method is a factory of the given record</p>","parent_name":"Method"},"Classes/GIR/Interface.html#/s:12libgir2swift3GIRC9InterfaceC4kindSSvp":{"name":"kind","abstract":"<p>String representation of <code>Interface</code>es</p>","parent_name":"Interface"},"Classes/GIR/Class.html#/s:12libgir2swift3GIRC5ClassC4kindSSvp":{"name":"kind","abstract":"<p>String representation of <code>Class</code>es</p>","parent_name":"Class"},"Classes/GIR/Class.html#/s:12libgir2swift3GIRC5ClassC6parentSSvp":{"name":"parent","abstract":"<p>parent class name</p>","parent_name":"Class"},"Classes/GIR/Class.html#/s:12libgir2swift3GIRC5ClassC10parentTypeAC6RecordCSgvp":{"name":"parentType","abstract":"<p>return the parent type of the given class</p>","parent_name":"Class"},"Classes/GIR/Class.html#/s:12libgir2swift3GIRC5ClassC8rootTypeAC6RecordCvp":{"name":"rootType","abstract":"<p>return the top level ancestor type of the given class</p>","parent_name":"Class"},"Classes/GIR/Record.html#/s:12libgir2swift3GIRC6RecordC4kindSSvp":{"name":"kind","abstract":"<p>String representation of <code>Record</code>s</p>","parent_name":"Record"},"Classes/GIR/Record.html#/s:12libgir2swift3GIRC6RecordC7cprefixSSvp":{"name":"cprefix","abstract":"<p>C language symbol prefix</p>","parent_name":"Record"},"Classes/GIR/Record.html#/s:12libgir2swift3GIRC6RecordC10typegetterSSvp":{"name":"typegetter","abstract":"<p>C type getter function</p>","parent_name":"Record"},"Classes/GIR/Record.html#/s:12libgir2swift3GIRC6RecordC7methodsSayAC6MethodCGvp":{"name":"methods","abstract":"<p>Methods associated with this record</p>","parent_name":"Record"},"Classes/GIR/Record.html#/s:12libgir2swift3GIRC6RecordC9functionsSayAC8FunctionCGvp":{"name":"functions","abstract":"<p>Functions associated with this record</p>","parent_name":"Record"},"Classes/GIR/Record.html#/s:12libgir2swift3GIRC6RecordC12constructorsSayAC6MethodCGvp":{"name":"constructors","abstract":"<p>Constructors for this record</p>","parent_name":"Record"},"Classes/GIR/Record.html#/s:12libgir2swift3GIRC6RecordC10propertiesSayAC8PropertyCGvp":{"name":"properties","abstract":"<p>Properties of this record</p>","parent_name":"Record"},"Classes/GIR/Record.html#/s:12libgir2swift3GIRC6RecordC7signalsSayAC6SignalCGvp":{"name":"signals","abstract":"<p>List of signals for this record</p>","parent_name":"Record"},"Classes/GIR/Record.html#/s:12libgir2swift3GIRC6RecordC10parentTypeAESgvp":{"name":"parentType","abstract":"<p>Parent type (<code>nil</code> for plain records)</p>","parent_name":"Record"},"Classes/GIR/Record.html#/s:12libgir2swift3GIRC6RecordC8rootTypeAEvp":{"name":"rootType","abstract":"<p>Root class (<code>nil</code> for plain records)</p>","parent_name":"Record"},"Classes/GIR/Record.html#/s:12libgir2swift3GIRC6RecordC10implementsSaySSGvp":{"name":"implements","abstract":"<p>Names of implemented interfaces</p>","parent_name":"Record"},"Classes/GIR/Record.html#/s:12libgir2swift3GIRC6RecordC10allMethodsSayAC6MethodCGvp":{"name":"allMethods","abstract":"<p>return all functions, methods, and constructors</p>","parent_name":"Record"},"Classes/GIR/Record.html#/s:12libgir2swift3GIRC6RecordC16inheritedMethodsSayAC6MethodCGvp":{"name":"inheritedMethods","abstract":"<p>return all functions, methods, and constructors inherited from ancestors</p>","parent_name":"Record"},"Classes/GIR/Record.html#/s:12libgir2swift3GIRC6RecordC4name4type5ctype7cprefix10typegetter7methods9functions12constructors10properties7signals10interfaces7comment14introspectable10deprecatedAESS_S4SSayAC6MethodCGSayAC8FunctionCGAVSayAC8PropertyCGSayAC6SignalCGSaySSGSSSbSSSgtcfc":{"name":"init(name:type:ctype:cprefix:typegetter:methods:functions:constructors:properties:signals:interfaces:comment:introspectable:deprecated:)","abstract":"<p>Designated initialiser</p>","parent_name":"Record"},"Classes/GIR/Record.html#/s:12libgir2swift3GIRC6RecordC4node7atIndexAE11SwiftLibXML10XMLElementV_Sitcfc":{"name":"init(node:atIndex:)","abstract":"<p>Initialiser to construct a record type from XML</p>","parent_name":"Record"},"Classes/GIR/Record.html#/s:12libgir2swift3GIRC6RecordC14methodMatchingyAC6MethodCSgSbAHXEF":{"name":"methodMatching(_:)","abstract":"<p>return the first method where the passed predicate closure returns <code>true</code></p>","parent_name":"Record"},"Classes/GIR/Record.html#/s:12libgir2swift3GIRC6RecordC23inheritedMethodMatchingyAC0E0CSgSbAHXEF":{"name":"inheritedMethodMatching(_:)","abstract":"<p>return the first inherited method where the passed predicate closure returns <code>true</code></p>","parent_name":"Record"},"Classes/GIR/Record.html#/s:12libgir2swift3GIRC6RecordC17anyMethodMatchingyAC0E0CSgSbAHXEF":{"name":"anyMethodMatching(_:)","abstract":"<p>return the first of my own or inherited methods where the passed predicate closure returns <code>true</code></p>","parent_name":"Record"},"Classes/GIR/Record.html#/s:12libgir2swift3GIRC6RecordC3refAC6MethodCSgvp":{"name":"ref","abstract":"<p>return the <code>retain</code> (ref) method for the given record, if any</p>","parent_name":"Record"},"Classes/GIR/Record.html#/s:12libgir2swift3GIRC6RecordC5unrefAC6MethodCSgvp":{"name":"unref","abstract":"<p>return the <code>release</code> (unref) method for the given record, if any</p>","parent_name":"Record"},"Classes/GIR/Record.html#/s:12libgir2swift3GIRC6RecordC3has8propertySbSS_tF":{"name":"has(property:)","abstract":"<p>return whether the record or one of its parents has a given property</p>","parent_name":"Record"},"Classes/GIR/Record.html#/s:12libgir2swift3GIRC6RecordC20nonDerivedPropertiesSayAC8PropertyCGvp":{"name":"nonDerivedProperties","abstract":"<p>return only the properties that are not derived</p>","parent_name":"Record"},"Classes/GIR/Record.html#/s:12libgir2swift3GIRC6RecordC13allPropertiesSayAC8PropertyCGvp":{"name":"allProperties","abstract":"<p>return all properties, including the ones derived from ancestors</p>","parent_name":"Record"},"Classes/GIR/Record.html#/s:12libgir2swift3GIRC6RecordC10allSignalsSayAC6SignalCGvp":{"name":"allSignals","abstract":"<p>return all signals, including the ones derived from ancestors</p>","parent_name":"Record"},"Classes/GIR/Record.html#/s:12libgir2swift3GIRC6RecordC5swiftSSvp":{"name":"swift","abstract":"<p>swift node name for this record</p>","parent_name":"Record"},"Classes/GIR/Record.html#/s:12libgir2swift3GIRC6RecordC12protocolNameSSvp":{"name":"protocolName","abstract":"<p>swift protocol name for this record</p>","parent_name":"Record"},"Classes/GIR/Record.html#/s:12libgir2swift3GIRC6RecordC10structNameSSvp":{"name":"structName","abstract":"<p>swift struct name for this record</p>","parent_name":"Record"},"Classes/GIR/Record.html#/s:12libgir2swift3GIRC6RecordC9classNameSSvp":{"name":"className","abstract":"<p>swift class name for this record</p>","parent_name":"Record"},"Classes/GIR/Bitfield.html#/s:12libgir2swift3GIRC8BitfieldC4kindSSvp":{"name":"kind","abstract":"<p>String representation of <code>Bitfield</code>s</p>","parent_name":"Bitfield"},"Classes/GIR/Enumeration.html#/s:12libgir2swift3GIRC11EnumerationC4kindSSvp":{"name":"kind","abstract":"<p>String representation of <code>Enumeration</code>s</p>","parent_name":"Enumeration"},"Classes/GIR/Enumeration.html#/s:12libgir2swift3GIRC11EnumerationC6Membera":{"name":"Member","abstract":"<p>an enumeration value in C is a constant</p>","parent_name":"Enumeration"},"Classes/GIR/Enumeration.html#/s:12libgir2swift3GIRC11EnumerationC7membersSayAC8ConstantCGvp":{"name":"members","abstract":"<p>enumeration values</p>","parent_name":"Enumeration"},"Classes/GIR/Enumeration.html#/s:12libgir2swift3GIRC11EnumerationC4name4type7members7comment14introspectable10deprecatedAESS_SSSayAC8ConstantCGSSSbSSSgtcfc":{"name":"init(name:type:members:comment:introspectable:deprecated:)","abstract":"<p>Designated initialiser</p>","parent_name":"Enumeration"},"Classes/GIR/Enumeration.html#/s:12libgir2swift3GIRC11EnumerationC4node7atIndexAE11SwiftLibXML10XMLElementV_Sitcfc":{"name":"init(node:atIndex:)","abstract":"<p>Initialiser to construct an enumeration from XML</p>","parent_name":"Enumeration"},"Classes/GIR/Constant.html#/s:12libgir2swift3GIRC8ConstantC4kindSSvp":{"name":"kind","abstract":"<p>String representation of <code>Constant</code>s</p>","parent_name":"Constant"},"Classes/GIR/Constant.html#/s:12libgir2swift3GIRC8ConstantC5valueSivp":{"name":"value","abstract":"<p>raw value</p>","parent_name":"Constant"},"Classes/GIR/Constant.html#/s:12libgir2swift3GIRC8ConstantC4name4type5ctype5value7comment14introspectable10deprecatedAESS_S2SSiSSSbSSSgtcfc":{"name":"init(name:type:ctype:value:comment:introspectable:deprecated:)","abstract":"<p>Designated initialiser</p>","parent_name":"Constant"},"Classes/GIR/Constant.html#/s:12libgir2swift3GIRC8ConstantC4node7atIndex8nameAttr04typeH005cTypeH0AE11SwiftLibXML10XMLElementV_SiS3SSgtcfc":{"name":"init(node:atIndex:nameAttr:typeAttr:cTypeAttr:)","abstract":"<p>Initialiser to construct a constant from XML</p>","parent_name":"Constant"},"Classes/GIR/Alias.html#/s:12libgir2swift3GIRC5AliasC4kindSSvp":{"name":"kind","abstract":"<p>String representation for an <code>Alias</code></p>","parent_name":"Alias"},"Classes/GIR/CType.html#/s:12libgir2swift3GIRC5CTypeC4kindSSvp":{"name":"kind","abstract":"<p>String representation of the <code>CType</code> thing</p>","parent_name":"CType"},"Classes/GIR/CType.html#/s:12libgir2swift3GIRC5CTypeC5ctypeSSvp":{"name":"ctype","abstract":"<p>underlying C type</p>","parent_name":"CType"},"Classes/GIR/CType.html#/s:12libgir2swift3GIRC5CTypeC14containedTypesSayAEGvp":{"name":"containedTypes","abstract":"<p>list of contained types</p>","parent_name":"CType"},"Classes/GIR/CType.html#/s:12libgir2swift3GIRC5CTypeC8nullableSbvp":{"name":"nullable","abstract":"<p><code>true</code> if this is an optional</p>","parent_name":"CType"},"Classes/GIR/CType.html#/s:12libgir2swift3GIRC5CTypeC5scopeSSSgvp":{"name":"scope","abstract":"<p>reference scope</p>","parent_name":"CType"},"Classes/GIR/CType.html#/s:12libgir2swift3GIRC5CTypeC4name4type5ctype7comment14introspectable10deprecated10isNullable8contains5scopeAESS_S3SSbSSSgSbSayAEGAOtcfc":{"name":"init(name:type:ctype:comment:introspectable:deprecated:isNullable:contains:scope:)","abstract":"<p>Designated initialiser</p>","parent_name":"CType"},"Classes/GIR/CType.html#/s:12libgir2swift3GIRC5CTypeC4node7atIndex8nameAttr04typeH005cTypeH008nullableH005scopeH0AE11SwiftLibXML10XMLElementV_SiS3SSgS2Stcfc":{"name":"init(node:atIndex:nameAttr:typeAttr:cTypeAttr:nullableAttr:scopeAttr:)","abstract":"<p>XML Element initialser</p>","parent_name":"CType"},"Classes/GIR/CType.html#/s:12libgir2swift3GIRC5CTypeC14fromChildrenOf7atIndex8nameAttr04typeJ008nullableJ005scopeJ0AE11SwiftLibXML10XMLElementV_SiS4Stcfc":{"name":"init(fromChildrenOf:atIndex:nameAttr:typeAttr:nullableAttr:scopeAttr:)","abstract":"<p>Factory method to construct a C Type from XML with types taken from children</p>","parent_name":"CType"},"Classes/GIR/CType.html#/s:12libgir2swift3GIRC5CTypeC6isVoidSbvp":{"name":"isVoid","abstract":"<p>return whether the give C type is void</p>","parent_name":"CType"},"Classes/GIR/CType.html#/s:12libgir2swift3GIRC5CTypeC7isArraySbvp":{"name":"isArray","abstract":"<p>return whether the type is an array</p>","parent_name":"CType"},"Classes/GIR/Datatype.html#/s:12libgir2swift3GIRC8DatatypeC4kindSSvp":{"name":"kind","abstract":"<p>String representation of the <code>Datatype</code> thing</p>","parent_name":"Datatype"},"Classes/GIR/Datatype.html#/s:12libgir2swift3GIRC8DatatypeC4typeSSvp":{"name":"type","abstract":"<p>C typedef name</p>","parent_name":"Datatype"},"Classes/GIR/Datatype.html#/s:12libgir2swift3GIRC8DatatypeC4name4type7comment14introspectable10deprecatedAESS_S2SSbSSSgtcfc":{"name":"init(name:type:comment:introspectable:deprecated:)","abstract":"<p>Memberwise initialiser</p>","parent_name":"Datatype"},"Classes/GIR/Datatype.html#/s:12libgir2swift3GIRC8DatatypeC4node7atIndex8nameAttr04typeH0AE11SwiftLibXML10XMLElementV_SiS2Stcfc":{"name":"init(node:atIndex:nameAttr:typeAttr:)","abstract":"<p>XML Element initialser</p>","parent_name":"Datatype"},"Classes/GIR/Datatype.html#/s:12libgir2swift3GIRC8DatatypeC4node7atIndex8withType8nameAttrAE11SwiftLibXML10XMLElementV_SiS2Stcfc":{"name":"init(node:atIndex:withType:nameAttr:)","abstract":"<p>XML Element initialser</p>","parent_name":"Datatype"},"Classes/GIR/Datatype.html#/s:12libgir2swift3GIRC8DatatypeC6isVoidSbvp":{"name":"isVoid","abstract":"<p>Returns <code>true</code> if the data type is <code>void</code></p>","parent_name":"Datatype"},"Classes/GIR/Thing.html#/s:12libgir2swift3GIRC5ThingC4kindSSvp":{"name":"kind","abstract":"<p>String representation of the kind of <code>Thing</code> represented by the receiver</p>","parent_name":"Thing"},"Classes/GIR/Thing.html#/s:12libgir2swift3GIRC5ThingC4nameSSvp":{"name":"name","abstract":"<p>type name without namespace/prefix</p>","parent_name":"Thing"},"Classes/GIR/Thing.html#/s:12libgir2swift3GIRC5ThingC7commentSSvp":{"name":"comment","abstract":"<p>documentation for the <code>Thing</code></p>","parent_name":"Thing"},"Classes/GIR/Thing.html#/s:12libgir2swift3GIRC5ThingC14introspectableSbvp":{"name":"introspectable","abstract":"<p>Is this <code>Thing</code> introspectable?</p>","parent_name":"Thing"},"Classes/GIR/Thing.html#/s:12libgir2swift3GIRC5ThingC10deprecatedSSSgvp":{"name":"deprecated","abstract":"<p>Alternative to use if deprecated</p>","parent_name":"Thing"},"Classes/GIR/Thing.html#/s:12libgir2swift3GIRC5ThingC18markedAsDeprecatedSbvp":{"name":"markedAsDeprecated","abstract":"<p>Is this <code>Thing</code> explicitly marked as deprecated?</p>","parent_name":"Thing"},"Classes/GIR/Thing.html#/s:12libgir2swift3GIRC5ThingC7versionSSSgvp":{"name":"version","abstract":"<p>Version the receiver is available from</p>","parent_name":"Thing"},"Classes/GIR/Thing.html#/s:12libgir2swift3GIRC5ThingC4hash4intoys6HasherVz_tF":{"name":"hash(into:)","abstract":"<p>Hashes the essential components of this value by feeding them into the given hasher.</p>","parent_name":"Thing"},"Classes/GIR/Thing.html#/s:12libgir2swift3GIRC5ThingC4name7comment14introspectable10deprecated18markedAsDeprecated7versionAESS_SSSbSSSgSbALtcfc":{"name":"init(name:comment:introspectable:deprecated:markedAsDeprecated:version:)","abstract":"<p>Memberwise initialiser</p>","parent_name":"Thing"},"Classes/GIR/Thing.html#/s:12libgir2swift3GIRC5ThingC4node7atIndex8nameAttrAE11SwiftLibXML10XMLElementV_SiSStcfc":{"name":"init(node:atIndex:nameAttr:)","abstract":"<p>XML Element initialser</p>","parent_name":"Thing"},"Classes/GIR/Thing.html#/s:12libgir2swift3GIRC5ThingC11escapedNameSSvp":{"name":"escapedName","abstract":"<p>return a name with reserved Ref or Protocol suffixes escaped</p>","parent_name":"Thing"},"Classes/GIR/Thing.html#/s:12libgir2swift3GIRC5ThingC4privSSSgvp":{"name":"priv","abstract":"<p>type name without &lsquo;Private&rsquo; suffix (nil if public)</p>","parent_name":"Thing"},"Classes/GIR/Thing.html#/s:12libgir2swift3GIRC5ThingC4nodeSSvp":{"name":"node","abstract":"<p>Type name without &lsquo;Class&rsquo;, &lsquo;Iface&rsquo;, etc. suffix</p>","parent_name":"Thing"},"Classes/GIR.html#/s:12libgir2swift3GIRC3xml11SwiftLibXML11XMLDocumentCvp":{"name":"xml","abstract":"<p>The parsed XML document represented by the receiver</p>","parent_name":"GIR"},"Classes/GIR.html#/s:12libgir2swift3GIRC8preambleSSvp":{"name":"preamble","abstract":"<p>Preample boilerplate to output before any generated code</p>","parent_name":"GIR"},"Classes/GIR.html#/s:12libgir2swift3GIRC6prefixSSvp":{"name":"prefix","abstract":"<p>Namespace prefix defined by the receiver</p>","parent_name":"GIR"},"Classes/GIR.html#/s:12libgir2swift3GIRC18identifierPrefixesSaySSGvp":{"name":"identifierPrefixes","abstract":"<p>Collection of identifier prefixes</p>","parent_name":"GIR"},"Classes/GIR.html#/s:12libgir2swift3GIRC14symbolPrefixesSaySSGvp":{"name":"symbolPrefixes","abstract":"<p>Collection of symbol prefixes</p>","parent_name":"GIR"},"Classes/GIR.html#/s:12libgir2swift3GIRC10namespacess11AnySequenceVy11SwiftLibXML12XMLNameSpaceVGvp":{"name":"namespaces","abstract":"<p>Type-erased sequence of namespaces</p>","parent_name":"GIR"},"Classes/GIR.html#/s:12libgir2swift3GIRC7aliasesSayAC5AliasCGvp":{"name":"aliases","abstract":"<p>Aliases defined by this GIR file</p>","parent_name":"GIR"},"Classes/GIR.html#/s:12libgir2swift3GIRC9constantsSayAC8ConstantCGvp":{"name":"constants","abstract":"<p>Constants defined by this GIR file</p>","parent_name":"GIR"},"Classes/GIR.html#/s:12libgir2swift3GIRC12enumerationsSayAC11EnumerationCGvp":{"name":"enumerations","abstract":"<p>Enums defined by this GIR file</p>","parent_name":"GIR"},"Classes/GIR.html#/s:12libgir2swift3GIRC9bitfieldsSayAC8BitfieldCGvp":{"name":"bitfields","abstract":"<p>Bitfields defined by this GIR file</p>","parent_name":"GIR"},"Classes/GIR.html#/s:12libgir2swift3GIRC10interfacesSayAC9InterfaceCGvp":{"name":"interfaces","abstract":"<p>Interfaces defined by this GIR file</p>","parent_name":"GIR"},"Classes/GIR.html#/s:12libgir2swift3GIRC7recordsSayAC6RecordCGvp":{"name":"records","abstract":"<p>Records defined by this GIR file</p>","parent_name":"GIR"},"Classes/GIR.html#/s:12libgir2swift3GIRC7classesSayAC5ClassCGvp":{"name":"classes","abstract":"<p>Classes defined by this GIR file</p>","parent_name":"GIR"},"Classes/GIR.html#/s:12libgir2swift3GIRC9functionsSayAC8FunctionCGvp":{"name":"functions","abstract":"<p>Free functions defined by this GIR file</p>","parent_name":"GIR"},"Classes/GIR.html#/s:12libgir2swift3GIRC9callbacksSayAC8CallbackCGvp":{"name":"callbacks","abstract":"<p>Callbacs defined by this GIR file</p>","parent_name":"GIR"},"Classes/GIR.html#/s:12libgir2swift3GIRC9BlacklistShySSGvpZ":{"name":"Blacklist","abstract":"<p>names of black-listed identifiers</p>","parent_name":"GIR"},"Classes/GIR.html#/s:12libgir2swift3GIRC17VerbatimConstantsShySSGvpZ":{"name":"VerbatimConstants","abstract":"<p>names of constants to be taken verbatim</p>","parent_name":"GIR"},"Classes/GIR.html#/s:12libgir2swift3GIRC10KnownTypesSDySSAC8DatatypeCGvpZ":{"name":"KnownTypes","abstract":"<p>context of known types</p>","parent_name":"GIR"},"Classes/GIR.html#/s:12libgir2swift3GIRC12KnownRecordsSDySSAC6RecordCGvpZ":{"name":"KnownRecords","abstract":"<p>context of known records</p>","parent_name":"GIR"},"Classes/GIR.html#/s:12libgir2swift3GIRC14KnownFunctionsSDySSAC8FunctionCGvpZ":{"name":"KnownFunctions","abstract":"<p>context of known functions</p>","parent_name":"GIR"},"Classes/GIR.html#/s:12libgir2swift3GIRC10GErrorTypeSSvpZ":{"name":"GErrorType","abstract":"<p>Type of <code>GError</code></p>","parent_name":"GIR"},"Classes/GIR.html#/s:12libgir2swift3GIRC11xmlDocument5quietAC11SwiftLibXML11XMLDocumentC_Sbtcfc":{"name":"init(xmlDocument:quiet:)","abstract":"<p>designated constructor</p>","parent_name":"GIR"},"Classes/GIR.html#/s:12libgir2swift3GIRC8fromFileACSgSS_tcfc":{"name":"init(fromFile:)","abstract":"<p>convenience constructor to read a gir file</p>","parent_name":"GIR"},"Classes/GIR.html#/s:12libgir2swift3GIRC6buffer5quietACSgSRys4Int8VG_Sbtcfc":{"name":"init(buffer:quiet:)","abstract":"<p>convenience constructor to read from memory</p>","parent_name":"GIR"},"Classes/GIR/Thing.html":{"name":"Thing","abstract":"<p>GIR named thing class</p>","parent_name":"GIR"},"Classes/GIR/Datatype.html":{"name":"Datatype","abstract":"<p>GIR type class</p>","parent_name":"GIR"},"Classes/GIR/CType.html":{"name":"CType","abstract":"<p>a type with an underlying C type entry</p>","parent_name":"GIR"},"Classes/GIR/Alias.html":{"name":"Alias","abstract":"<p>a type alias is just a type with an underlying C type</p>","parent_name":"GIR"},"Classes/GIR/Constant.html":{"name":"Constant","abstract":"<p>an entry for a constant</p>","parent_name":"GIR"},"Classes/GIR/Enumeration.html":{"name":"Enumeration","abstract":"<p>an enumeration entry</p>","parent_name":"GIR"},"Classes/GIR/Bitfield.html":{"name":"Bitfield","abstract":"<p>a bitfield is defined akin to an enumeration</p>","parent_name":"GIR"},"Classes/GIR/Record.html":{"name":"Record","abstract":"<p>a data type record to create a protocol/struct/class for</p>","parent_name":"GIR"},"Classes/GIR/Class.html":{"name":"Class","abstract":"<p>a class data type record</p>","parent_name":"GIR"},"Classes/GIR/Interface.html":{"name":"Interface","abstract":"<p>an inteface is similar to a class,","parent_name":"GIR"},"Classes/GIR/Method.html":{"name":"Method","abstract":"<p>data type representing a function/method</p>","parent_name":"GIR"},"Classes/GIR/Function.html":{"name":"Function","abstract":"<p>a function is the same as a method</p>","parent_name":"GIR"},"Classes/GIR/Callback.html":{"name":"Callback","abstract":"<p>a callback is the same as a function</p>","parent_name":"GIR"},"Classes/GIR/Signal.html":{"name":"Signal","abstract":"<p>a signal is equivalent to a function</p>","parent_name":"GIR"},"Classes/GIR/Property.html":{"name":"Property","abstract":"<p>a property is a C type</p>","parent_name":"GIR"},"Classes/GIR/Argument.html":{"name":"Argument","abstract":"<p>data type representing a function/method argument or return type</p>","parent_name":"GIR"},"Classes/GIR.html#/s:12libgir2swift3GIRC11boilerPlateSSvp":{"name":"boilerPlate","abstract":"<p>code boiler plate</p>","parent_name":"GIR"},"Classes/GIR.html#/s:12libgir2swift3GIRC4docs8childrenSSs12LazySequenceVys03AnyF0Vy11SwiftLibXML10XMLElementVGG_tFZ":{"name":"docs(children:)","abstract":"<p>return the documentation for the given child nodes</p>","parent_name":"GIR"},"Classes/GIR.html#/s:12libgir2swift3GIRC23deprecatedDocumentation8childrenSSSgs12LazySequenceVys03AnyG0Vy11SwiftLibXML10XMLElementVGG_tFZ":{"name":"deprecatedDocumentation(children:)","abstract":"<p>return the documentation for the given child nodes</p>","parent_name":"GIR"},"Classes/GIR.html#/s:12libgir2swift3GIRC13documentation4name8childrenS2S_s12LazySequenceVys03AnyG0Vy11SwiftLibXML10XMLElementVGGtFZ":{"name":"documentation(name:children:)","abstract":"<p>return the documentation for the given child nodes</p>","parent_name":"GIR"},"Classes/GIR.html#/s:12libgir2swift3GIRC4args8childrenSayAC8ArgumentCGs12LazySequenceVys03AnyG0Vy11SwiftLibXML10XMLElementVGG_tFZ":{"name":"args(children:)","abstract":"<p>return the method/function arguments for the given child nodes</p>","parent_name":"GIR"},"Classes/GIR.html#/s:12libgir2swift3GIRC9dumpSwiftSSyF":{"name":"dumpSwift()","abstract":"<p>dump Swift code</p>","parent_name":"GIR"},"Classes/GIR.html":{"name":"GIR","abstract":"<p>Representation of a GIR file</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}